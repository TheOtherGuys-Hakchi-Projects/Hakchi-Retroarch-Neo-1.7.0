#!/bin/sh

source /etc/preinit
script_init

HOME=/etc/libretro
corename=$1
core=$HOME/core/$1_libretro.so
rom=$2
filename=$(basename "$rom")
id=${filename%.*}
extension="${filename##*.}"
autosave="/var/cache/retroarch/$id.state.auto"
rsram="/var/cache/retroarch/$id.srm"
rsav="/var/cache/retroarch/$id.sav"
t_suffix=_time.txt
demo_time=30
debug=0
bezel_mode=0
clovercon_file=/dev/clovercon1
logend="_RetroArch.log"
shift 2

if [ ! -z "$custom_loadscreen" ]; then
  decodepng "$rootfs/share/retroarch/assets/$custom_loadscreen" > /dev/fb0;
else
  if [ -f "$mountpoint/media/hakhci/RA_loading_screens/"$corename".png" ] && [ -f "$rootfs/share/retroarch/assets/RAloading-min.png" ]; then
	decodepng "$rootfs/share/retroarch/assets/core_loading_screens/"$corename".png"  > /dev/fb0;
  else
    if [ -f "$rootfs/share/retroarch/assets/core_loading_screens/"$corename".png" ] && [ -f "$rootfs/share/retroarch/assets/RAloading-min.png" ]; then
	  decodepng "$rootfs/share/retroarch/assets/core_loading_screens/"$corename".png"  > /dev/fb0;
    else
	  decodepng "$rootfs/share/retroarch/assets/RAloading-min.png" > /dev/fb0;
    fi
  fi
fi

while [ $# -gt 0 ]; do
  [ "$1" == "--load-state-file" ] && load=$2
  [ "$1" == "--save-on-quit" ] && save=$2
  [ "$1" == "--rollback-input-dir" ] && load=$2/savestate
  [ "$1" == "--rollback-output-dir" ] && save=$2/savestate
  [ "$1" == "--save-screenshot-on-quit" ] && screenshot=$2
  [ "$1" == "--save-data-backing-file" ] && sram=$2
  [ "$1" == "--graphic-filter" ] && filter=$2
  [ "$1" == "--enable-crt-scanlines" ] && crt=1
  [ "$1" == "--video-mode" ] && [ "$2" == "crt-filter" ] && filter=crt720 && crt=1
  [ "$1" == "--video-mode" ] && [ "$2" == "keep-aspect-ratio" ] && filter=gpu720
  [ "$1" == "--video-mode" ] && [ "$2" == "pixel-perfect" ] && filter=ppu
  [ "$1" == "--smooth43" ] && smooth43=1
  [ "$1" == "--no-smooth" ] && no_smooth=1
  [ "$1" == "--no-scanlines" ] && no_scanlines=1
  [ "$1" == "--bezel-mode" ] && bezel_mode=1
  [ "$1" == "--title-code" ] && title_code=$2
  [ "$1" == "--ra-extra" ] && extra=$2
  [ "$1" == "--ra-nosaves" ] && nosaves=1
  [ "$1" == "--load-time-path" ] && timefile_load=$2
  [ "$1" == "--save-time-path" ] && timefile_save=$2
  [ "$1" == "--replay-inputs" ] && demo=1
  [ "$1" == "--decorative-frame-path" ] && frame=$2
  [ "$1" == "--debug-usb" ] && debug=1
  [ "$1" == "--debug-nand" ] && debug=2
  [ "$1" == "--custom-loadscreen" ] && custom_loadscreen=$2
  shift
done

[ -z "$timefile_save" ] && timefile_save=$load$t_suffix
[ -z "$timefile_load" ] && timefile_load=$load$t_suffix

[ ! -z "$demo" ] && load=$(dirname $load)/savestate

# Create cache folder and copy savestates from USB if any
mkdir -p /var/cache/retroarch/
if [ -d "/media/hakchi" ] && ls /media/data/ra_savestates/$title_code/$id.state*; then
  cp /media/data/ra_savestates/$title_code/$id.state* /var/cache/retroarch
fi

# saves if any
if [ ! -z "$load" ] && [ -f "$load" ] && [ -z "$nosaves" ]; then
  if [ $(hexdump -n 2 -e '1/1 "%02X"' "$load") == "1F8B" ]; then
    cp -f "$load" "$autosave.gz"
    gunzip -f "$autosave.gz"
  else
    cp -f "$load" "$autosave"
  fi
fi
# Nestopia names FDS saves as $id.sav, so here's a quick fix
if [ "$corename" == "nestopia" ] && [ "$extension" == "fds" ]; then
  [ ! -z "$sram" ] && [ -f "$sram" ] && cp -f "$sram" "$rsav"
else
  [ ! -z "$sram" ] && [ -f "$sram" ] && cp -f "$sram" "$rsram"
fi

#Refresh the framebuffer incase there is some left over FB process
if [ ! -z "$custom_loadscreen" ]; then
  decodepng "$rootfs/share/retroarch/assets/$custom_loadscreen" > /dev/fb0;
else
  if [ -f "$mountpoint/media/hakhci/RA_loading_screens/"$corename".png" ] && [ -f "$rootfs/share/retroarch/assets/RAloading-min.png" ]; then
	decodepng "$rootfs/share/retroarch/assets/core_loading_screens/"$corename".png"  > /dev/fb0;
  else
    if [ -f "$rootfs/share/retroarch/assets/core_loading_screens/"$corename".png" ] && [ -f "$rootfs/share/retroarch/assets/RAloading-min.png" ]; then
	  decodepng "$rootfs/share/retroarch/assets/core_loading_screens/"$corename".png"  > /dev/fb0;
    else
	  decodepng "$rootfs/share/retroarch/assets/RAloading-min.png" > /dev/fb0;
    fi
  fi
fi

# Hold L button while starting a game to toggle bezel-mode for this game
if [ -e "$clovercon_file" ] && [ "$(cat $clovercon_file)" == "0004" ]; then
  if [ "$bezel_mode" == "0" ]; then
    sed -i 's/^Exec.*/& --bezel-mode/' /usr/share/games/$title_code/$title_code.desktop && bezel_mode=1
  else
    sed -i 's/ --bezel-mode//g' /usr/share/games/$title_code/$title_code.desktop && bezel_mode=0
  fi
fi
# Hold R button while starting a game to toggle global bezel-mode (games with --bezel-mode will still run in bezel-mode)
if [ -e "$clovercon_file" ] && [ "$(cat $clovercon_file)" == "0008" ]; then
  grep "^bezel_mode=" /bin/retroarch-clover-child | grep "0" && global_bezel=0 || global_bezel=1
  if [ "$global_bezel" == "0" ]; then
    sed -i 's/^bezel_mode=0/bezel_mode=1/' /bin/retroarch-clover-child && bezel_mode=1
  else
    sed -i 's/^bezel_mode=1/bezel_mode=0/' /bin/retroarch-clover-child && bezel_mode=0
	grep "^Exec=" /usr/share/games/$title_code/$title_code.desktop | grep bezel-mode && bezel_mode=1
  fi
fi

# Smooth, border and scanlines
[ "$filter" == "crt720" ] && set_smooth=1
[ "$filter" == "crt720" ] && [ ! -z "$no_smooth" ] && set_smooth=0
[ "$filter" == "gpu720" ] && [ ! -z "$smooth43" ] && set_smooth=1
if [ "$bezel_mode" == "1" ]; then
  [ "$filter" == "crt720" ] && overlay1=scanlines.png && overlay2=$frame.png
else
  [ "$filter" == "crt720" ] && overlay1=scanlines.png && overlay2=
fi
[ "$filter" == "crt720" ] && [ ! -z "$no_scanlines" ] || [ ! "$filter" == "crt720" ] && overlay1=$frame.png && overlay2=
overlay1=$(echo "$overlay1" | sed 's/\//\\\//g')
overlay2=$(echo "$overlay2" | sed 's/\//\\\//g')
frame_scanlines=$(echo "$frame" | sed 's/\//\\\//g')
sed -i -e 's/overlay0_overlay = "[^"]*"/overlay0_overlay = "'$overlay1'"/g' /etc/libretro/.config/retroarch/overlay/default.cfg
sed -i -e 's/overlay0_desc0_overlay = "[^"]*"/overlay0_desc0_overlay = "'$overlay2'"/g' /etc/libretro/.config/retroarch/overlay/default.cfg
sed -i -e 's/overlay0_desc0_overlay = "[^"]*"/overlay0_desc0_overlay = "'$frame_scanlines'.png"/g' /etc/libretro/.config/retroarch/overlay/default_scanlines.cfg

# Functions to make the rest easier
smooth () { sed -i -e 's/video_smooth = "[^"]*"/video_smooth = "'$1'"/g' /etc/libretro/retroarch.cfg; }
overlay () { sed -i -e 's/input_overlay_enable = "[^"]*"/input_overlay_enable = "'$1'"/g' /etc/libretro/retroarch.cfg; }
overlay_file () { sed -i -e 's/input_overlay = "~\/\.config\/retroarch\/overlay\/[^"]*"/input_overlay = "~\/\.config\/retroarch\/overlay\/'$1'"/g' /etc/libretro/retroarch.cfg; }
int_scale () { sed -i -e 's/video_scale_integer = "[^"]*"/video_scale_integer = "'$1'"/g' /etc/libretro/retroarch.cfg; }
ratio () { sed -i -e 's/aspect_ratio_index = "[^"]*"/aspect_ratio_index = "'$1'"/g' /etc/libretro/retroarch.cfg; }
width () { sed -i -e 's/custom_viewport_width = "[^"]*"/custom_viewport_width = "'$1'"/g' /etc/libretro/retroarch.cfg; }
height () { sed -i -e 's/custom_viewport_height = "[^"]*"/custom_viewport_height = "'$1'"/g' /etc/libretro/retroarch.cfg; }
posx () { sed -i -e 's/custom_viewport_x = "[^"]*"/custom_viewport_x = "'$1'"/g' /etc/libretro/retroarch.cfg; }
posy () { sed -i -e 's/custom_viewport_y = "[^"]*"/custom_viewport_y = "'$1'"/g' /etc/libretro/retroarch.cfg; }

# Smooth and bezel-mode
grep "video_smooth = " /etc/libretro/retroarch.cfg | grep true && current_smooth=true || current_smooth=false
grep "input_overlay_enable = " /etc/libretro/retroarch.cfg | grep true && current_overlay=true || current_overlay=false
if [ "$bezel_mode" == "1" ]; then
  grep "video_scale_integer = " /etc/libretro/retroarch.cfg | grep true && current_int=true || current_int=false
  current_overcfg=$(grep "input_overlay = " /etc/libretro/retroarch.cfg | grep -o "[^/]*cfg")
  current_ratio=$(grep "aspect_ratio_index = " /etc/libretro/retroarch.cfg | sed 's/[^0-9]*//g')
  current_width=$(grep "custom_viewport_width = " /etc/libretro/retroarch.cfg | sed 's/[^0-9]*//g')
  current_height=$(grep "custom_viewport_height = " /etc/libretro/retroarch.cfg | sed 's/[^0-9]*//g')
  current_posx=$(grep "custom_viewport_x = " /etc/libretro/retroarch.cfg | sed 's/[^0-9]*//g')
  current_posy=$(grep "custom_viewport_y = " /etc/libretro/retroarch.cfg | sed 's/[^0-9]*//g')
  [ "$filter" == "crt720" ] && width 877 && posx 201
  [ "$filter" == "gpu720" ] && smooth false && width 877 && posx 201
  [ "$filter" == "ppu" ] && smooth false && width 768 && posx 256
  ratio 22 && overlay true && overlay_file default.cfg && height 672 && posy 24 && int_scale true
fi
[ "$filter" == "crt720" ] && overlay true
[ "$set_smooth" == "0" ] && smooth false
[ "$set_smooth" == "1" ] && smooth true

# Start timestamp
ts=$(date +"%s")
tm=0
[ -f "$timefile_load" ] && tm=$(cat "$timefile_load")

# Clear Caches/Buffers
sync
echo 3 > /proc/sys/vm/drop_caches

if [ "$debug" == "0" ]; then #Default
  retroarch -c "$HOME/retroarch.cfg" -vfL "$core" "$rom" $extra &
fi 
if [ "$debug" == "1" ]; then #Verbose USB mode
  retroarch -c "$HOME/retroarch.cfg" -vfL "$core" "$rom" $extra > /media/"$filename"_RetroArch.log 2>&1 &
fi 
if [ "$debug" == "2" ]; then #Verbose NAND mode
  retroarch -c "$HOME/retroarch.cfg" -vfL "$core" "$rom" $extra > /tmp/"$filename"_RetroArch.log 2>&1 &
fi 
rpid=$!

[ ! -z "$save" ] && mkdir -p $(dirname "$save")
[ ! -z "$sram" ] && mkdir -p $(dirname "$sram")
[ ! -z "$screenshot" ] && mkdir -p $(dirname "$screenshot")

# Set Watchdog Arguments
watchdog_args="$rpid"

# Demo mode enabled
if [ ! -z "$demo" ]; then
  watchdog_args="$watchdog_args --demo"
fi
# Set Screenshot Args
if [ ! -z "$screenshot" ] && [ -z "$nosaves" ]; then
  watchdog_args="$watchdog_args --screenshot "$screenshot""
fi

# Run retroarch watchdog
retroarch_watchdog $watchdog_args

# Saves!
[ ! -z "$save" ] && [ -f "$autosave" ] && [ -z "$nosaves" ] && gzip -f "$autosave" && mv -f "$autosave.gz" "$save"
if [ "$corename" == "nestopia" ] && [ "$extension" == "fds" ]; then
  [ ! -z "$sram" ] && [ -f "$rsav" ] && mv -f "$rsav" "$sram"
else
  [ ! -z "$sram" ] && [ -f "$rsram" ] && mv -f "$rsram" "$sram"
fi

# Time
ts2=$(date +"%s")
tm=$((tm + ts2 - ts))
echo $tm > "$timefile_save"

# Restore settings if needed
[ ! -z "$set_smooth" ] || [ "$bezel_mode" == "1" ] && sed -i -e 's/video_smooth = "[^"]*"/video_smooth = "'$current_smooth'"/g' /etc/libretro/retroarch.cfg
[ "$filter" == "crt720" ] && sed -i -e 's/input_overlay_enable = "[^"]*"/input_overlay_enable = "'$current_overlay'"/g' /etc/libretro/retroarch.cfg
if [ "$bezel_mode" == "1" ]; then
  sed -i -e 's/input_overlay_enable = "[^"]*"/input_overlay_enable = "'$current_overlay'"/g' /etc/libretro/retroarch.cfg
  sed -i -e 's/input_overlay = "~\/\.config\/retroarch\/overlay\/[^"]*"/input_overlay = "~\/\.config\/retroarch\/overlay\/'$current_overcfg'"/g' /etc/libretro/retroarch.cfg
  sed -i -e 's/video_scale_integer = "[^"]*"/video_scale_integer = "'$current_int'"/g' /etc/libretro/retroarch.cfg
  sed -i -e 's/aspect_ratio_index = "[^"]*"/aspect_ratio_index = "'$current_ratio'"/g' /etc/libretro/retroarch.cfg
  sed -i -e 's/custom_viewport_width = "[^"]*"/custom_viewport_width = "'$current_width'"/g' /etc/libretro/retroarch.cfg
  sed -i -e 's/custom_viewport_height = "[^"]*"/custom_viewport_height = "'$current_height'"/g' /etc/libretro/retroarch.cfg
  sed -i -e 's/custom_viewport_x = "[^"]*"/custom_viewport_x = "'$current_posx'"/g' /etc/libretro/retroarch.cfg
  sed -i -e 's/custom_viewport_y = "[^"]*"/custom_viewport_y = "'$current_posy'"/g' /etc/libretro/retroarch.cfg
fi

# Copy savestates to USB if any and remove cache folder
if [ -d "/media/hakchi" ] && ls /var/cache/retroarch/$id.*[^auto]; then
  [ ! -d "/media/data/ra_savestates/$title_code" ] && mkdir -p /media/data/ra_savestates/$title_code
  cp /var/cache/retroarch/$id.*[^auto] /media/data/ra_savestates/$title_code
fi
rm -rf /var/cache/retroarch/

# Clear Caches/Buffers
sync
echo 3 > /proc/sys/vm/drop_caches

# Back to the shell
/etc/init.d/S81clover-mcp start
