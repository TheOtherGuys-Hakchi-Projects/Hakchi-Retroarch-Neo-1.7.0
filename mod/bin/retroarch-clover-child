#!/bin/sh

source /etc/preinit
script_init

HOME=/etc/libretro
corename=$1
noprefix=${corename#km_}
core=$HOME/core/$1_libretro.so
rom=$2
filename=$(basename "$rom")
id=${filename%.*}
extension="${filename##*.}"
autosave="/etc/libretro/states/$id.state.auto"
rsram="/etc/libretro/saves/$id.srm"
rsav="/etc/libretro/saves/$id.sav"
t_suffix=_time.txt
demo_time=30
debug=0
bezel_mode=0
clovercon_file=/dev/clovercon1
logend="_RetroArch.log"
shift 2

if ! echo $corename | grep "prboom\|tyrquake"; then
  umount "$rootfs/share/retroarch/assets/RAloading-min.png"
fi

while [ $# -gt 0 ]; do
  [ "$1" == "--load-state-file" ] && load=$2
  [ "$1" == "--save-on-quit" ] && save=$2
  [ "$1" == "--rollback-input-dir" ] && load=$2/savestate
  [ "$1" == "--rollback-output-dir" ] && save=$2/savestate
  [ "$1" == "--save-screenshot-on-quit" ] && screenshot=$2
  [ "$1" == "--save-data-backing-file" ] && sram=$2
  [ "$1" == "--graphic-filter" ] && filter=$2
  [ "$1" == "--enable-crt-scanlines" ] && crt=1
  [ "$1" == "--video-mode" ] && [ "$2" == "crt-filter" ] && filter=crt720 && crt=1
  [ "$1" == "--video-mode" ] && [ "$2" == "keep-aspect-ratio" ] && filter=gpu720
  [ "$1" == "--video-mode" ] && [ "$2" == "pixel-perfect" ] && filter=ppu
  [ "$1" == "--smooth43" ] && smooth43=1
  [ "$1" == "--no-smooth" ] && no_smooth=1
  [ "$1" == "--no-scanlines" ] && no_scanlines=1
  [ "$1" == "--bezel-mode" ] && bezel_mode=1
  [ "$1" == "--title-code" ] && title_code=$2
  [ "$1" == "--ra-extra" ] && extra=$2
  [ "$1" == "--ra-nosaves" ] && nosaves=1
  [ "$1" == "--load-time-path" ] && timefile_load=$2
  [ "$1" == "--save-time-path" ] && timefile_save=$2
  [ "$1" == "--replay-inputs" ] && demo=1
  [ "$1" == "--decorative-frame-path" ] && frame=$2
  [ "$1" == "--debug-usb" ] && debug=1
  [ "$1" == "--debug-nand" ] && debug=2
  [ "$1" == "--custom-loadscreen" ] && custom_loadscreen=$2
  shift
done

# Display Splash Screen
if [ ! -z "$custom_loadscreen" ]; then
  decodepng "$rootfs/share/retroarch/assets/$custom_loadscreen" > /dev/fb0;
else
  if [ -f "$mountpoint/media/hakchi/RA_loading_screens/"$noprefix".png" ] && [ -f "$rootfs/share/retroarch/assets/RAloading-min.png" ]; then
	  decodepng "$mountpoint/media/hakchi/RA_loading_screens/"$noprefix".png"  > /dev/fb0;
  else
    if [ -f "$rootfs/share/retroarch/assets/core_loading_screens/"$noprefix".png" ] && [ -f "$rootfs/share/retroarch/assets/RAloading-min.png" ]; then
	  decodepng "$rootfs/share/retroarch/assets/core_loading_screens/"$noprefix".png"  > /dev/fb0;
    else
	  decodepng "$rootfs/share/retroarch/assets/RAloading-min.png" > /dev/fb0;
    fi
  fi
fi

[ -z "$timefile_save" ] && timefile_save=$load$t_suffix
[ -z "$timefile_load" ] && timefile_load=$load$t_suffix

[ ! -z "$demo" ] && load=$(dirname $load)/savestate

# Create cache folder and overmount savestates folder if it exists on USB
mkdir -p /var/cache/retroarch/
[ -d "/media/data/ra_savestates" ] && mount_bind "/media/data/ra_savestates" "/etc/libretro/states"

# saves if any
if [ ! -z "$load" ] && [ -f "$load" ] && [ -z "$nosaves" ]; then
  if [ $(hexdump -n 2 -e '1/1 "%02X"' "$load") == "1F8B" ]; then
    cp -f "$load" "$autosave.gz"
    gunzip -f "$autosave.gz"
  else
    cp -f "$load" "$autosave"
  fi
fi
# Nestopia names FDS saves as $id.sav, so here's a quick fix
if [ "$corename" == "nestopia" ] && [ "$extension" == "fds" ]; then
  [ ! -z "$sram" ] && [ -f "$sram" ] && cp -f "$sram" "$rsav"
elif [ "$corename" == "genesis_plus_gx" ] && [ -f "/var/lib/clover/profiles/0/$title_code/$id.brm" ]; then
  cp -f /var/lib/clover/profiles/0/$title_code/$id.brm /etc/libretro/saves
else
  [ ! -z "$sram" ] && [ -f "$sram" ] && cp -f "$sram" "$rsram"
fi

# Hold L button while starting a game to toggle bezel-mode for this game
if [ -e "$clovercon_file" ] && [ "$(cat $clovercon_file)" == "0004" ]; then
  if [ "$bezel_mode" == "0" ]; then
    sed -i 's/^Exec.*/& --bezel-mode/' /usr/share/games/$title_code/$title_code.desktop && bezel_mode=1
  else
    sed -i 's/ --bezel-mode//g' /usr/share/games/$title_code/$title_code.desktop && bezel_mode=0
  fi
fi
# Hold R button while starting a game to toggle global bezel-mode (games with --bezel-mode will still run in bezel-mode)
if [ -e "$clovercon_file" ] && [ "$(cat $clovercon_file)" == "0008" ]; then
  grep "^bezel_mode=" /bin/retroarch-clover-child | grep "0" && global_bezel=0 || global_bezel=1
  if [ "$global_bezel" == "0" ]; then
    sed -i 's/^bezel_mode=0/bezel_mode=1/' /bin/retroarch-clover-child && bezel_mode=1
  else
    sed -i 's/^bezel_mode=1/bezel_mode=0/' /bin/retroarch-clover-child && bezel_mode=0
	grep "^Exec=" /usr/share/games/$title_code/$title_code.desktop | grep bezel-mode && bezel_mode=1
  fi
fi

# Smooth, border and scanlines
if [ "$bezel_mode" == "1" ]; then
  [ "$filter" == "crt720" ] && overlay1=scanlines.png && overlay2=$frame.png
else
  [ "$filter" == "crt720" ] && overlay1=scanlines.png && overlay2=
fi
[ "$filter" == "crt720" ] && [ ! -z "$no_scanlines" ] || [ ! "$filter" == "crt720" ] && overlay1=$frame.png && overlay2=
retroarch_watchdog --configEdit /etc/libretro/.config/retroarch/overlay/default.cfg overlay0_overlay "$overlay1" overlay0_desc0_overlay "$overlay2"
retroarch_watchdog --configEdit /etc/libretro/.config/retroarch/overlay/default_scanlines.cfg overlay0_desc0_overlay "$frame.png"

ra_config_args=""
# Functions to make the rest easier
smooth () { ra_config_args="$ra_config_args video_smooth $1"; }
overlay () { ra_config_args="$ra_config_args input_overlay_enable $1"; }
overlay_file () { ra_config_args="$ra_config_args input_overlay ~/.config/retroarch/overlay/$1"; }
int_scale () { ra_config_args="$ra_config_args video_scale_integer $1"; }
ratio () { ra_config_args="$ra_config_args aspect_ratio_index $1"; }
width () { ra_config_args="$ra_config_args custom_viewport_width $1"; }
height () { ra_config_args="$ra_config_args custom_viewport_height $1"; }
posx () { ra_config_args="$ra_config_args custom_viewport_x $1"; }
posy () { ra_config_args="$ra_config_args custom_viewport_y $1"; }

# Smooth and bezel-mode
if [ "$bezel_mode" == "1" ]; then
  [ "$filter" == "crt720" ] && width 877 && posx 201
  [ "$filter" == "gpu720" ] && smooth false && width 877 && posx 201
  [ "$filter" == "ppu" ] && smooth false && width 768 && posx 256
  ratio 22 && overlay true && overlay_file default.cfg && height 672 && posy 24 && int_scale true
fi
[ "$filter" == "crt720" ] && overlay true
[ "$filter" == "crt720" ] && [ -z "$no_smooth" ] && smooth true
[ "$filter" == "crt720" ] && [ ! -z "$no_smooth" ] && smooth false
[ "$filter" == "gpu720" ] && [ ! -z "$smooth43" ] && smooth true

[ ! -z "$ra_config_args" ] && retroarch_watchdog --configEdit /etc/libretro/retroarch.cfg $ra_config_args

# Clear Caches/Buffers
sync
echo 3 > /proc/sys/vm/drop_caches

if [ "$debug" == "0" ]; then #Default
  retroarch -c "$HOME/retroarch.cfg" -vfL "$core" "$rom" $extra &
fi 
if [ "$debug" == "1" ]; then #Verbose USB mode
  retroarch -c "$HOME/retroarch.cfg" -vfL "$core" "$rom" $extra > /media/"$filename"_RetroArch.log 2>&1 &
fi 
if [ "$debug" == "2" ]; then #Verbose NAND mode
  retroarch -c "$HOME/retroarch.cfg" -vfL "$core" "$rom" $extra > /tmp/"$filename"_RetroArch.log 2>&1 &
fi 
rpid=$!

[ ! -z "$save" ] && mkdir -p $(dirname "$save")
[ ! -z "$sram" ] && mkdir -p $(dirname "$sram")
[ ! -z "$screenshot" ] && mkdir -p $(dirname "$screenshot")

# Set Watchdog Arguments
watchdog_args="$rpid"

# Demo mode enabled
if [ ! -z "$demo" ]; then
  watchdog_args="$watchdog_args --demo"
fi
# Set Screenshot Args
if [ ! -z "$screenshot" ] && [ -z "$nosaves" ]; then
  watchdog_args="$watchdog_args --screenshot "$screenshot""
fi
# Load Time Played
[ -f "$timefile_load" ] && watchdog_args="$watchdog_args --time $(cat "$timefile_load")"
[ -z "$demo" ] && watchdog_args="$watchdog_args --timePath "$timefile_save""

# Run retroarch watchdog
retroarch_watchdog $watchdog_args

# Saves!
[ ! -z "$save" ] && [ -f "$autosave" ] && [ -z "$nosaves" ] && gzip -f "$autosave" && mv -f "$autosave.gz" "$save"
if [ "$corename" == "nestopia" ] && [ "$extension" == "fds" ]; then
  [ ! -z "$sram" ] && [ -f "$rsav" ] && mv -f "$rsav" "$sram"
elif [ "$corename" == "genesis_plus_gx" ] && [ -f "/etc/libretro/saves/$id.brm" ]; then
  mv -f /etc/libretro/saves/$id.brm /var/lib/clover/profiles/0/$title_code
else
  [ ! -z "$sram" ] && [ -f "$rsram" ] && mv -f "$rsram" "$sram"
fi

# Restore Retroarch Config
retroarch_watchdog --configRestore /etc/libretro/retroarch.cfg

# Unmount savestates folder if mounted and remove cache folder
mountpoint /etc/libretro/states && umount /etc/libretro/states
rm -rf /var/cache/retroarch/

# Clear Caches/Buffers
sync
echo 3 > /proc/sys/vm/drop_caches

# Back to the shell
/etc/init.d/S81clover-mcp start
